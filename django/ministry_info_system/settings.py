"""
Django settings for ministry_info_system project.

Generated by 'django-admin startproject' using Django 3.0.7.
"""

import os
import environ
from firebase_admin import initialize_app

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

file_env = environ.Env()
# environ.Env.read_env(env_file=os.path.join(BASE_DIR, '.env'))
environ.Env.read_env()

ROOT_URL = file_env.str('ROOT_URL')

SECRET_KEY = file_env.str('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = file_env.bool('DEBUG', default=False)
TEMPLATE_DEBUG = DEBUG

ALLOWED_HOSTS = "*"

# AUTH_USER_MODEL = 'account.UserAccount'

AUTHENTICATION_BACKENDS = (
    # Needed to login by custom User model, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",
    # "account.authentication.DRFOAuthBackend",

)

SILKY_PYTHON_PROFILER = True

EMAIL_HOST = file_env.str('EMAIL_HOST', default="")
EMAIL_PORT = file_env.int('EMAIL_PORT', default=25)
EMAIL_HOST_USER = file_env.str('EMAIL_HOST_USER', default="")
EMAIL_HOST_PASSWORD = file_env.str('EMAIL_HOST_PASSWORD', default="")
EMAIL_USE_TLS = file_env.bool('EMAIL_USE_TLS', default=True)


SESSION_COOKIE_SAMESITE = None

# Application definition
INSTALLED_APPS = [
    'rangefilter',
    # 'advanced_filters',
    # 'fcm_django',
    'crispy_forms',
    # 'django_celery_results',
    # 'django_celery_beat',
    'django_select2',
    'admin_interface',
    'import_export',
    'simple_history',
    'colorfield',
    'corsheaders',
    'drf_yasg',
    'rest_framework',
    'rest_framework.authtoken',
    'django_cleanup',
    'django_static_jquery_ui',
    'django_tabbed_changeform_admin',
    'django_admin_multiple_choice_list_filter',
    'admin_auto_filters',
    'valueinlist_filter',
    # 'admin_reorder',
    # 'admin_display_fields_settings',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'ministry_info_system',

    'django_select2_admin_filters',

    'silk',
]

CORS_ORIGIN_WHITELIST = []

# FIREBASE_APP = initialize_app()

# FCM_DJANGO_SETTINGS = {
#     "APP_VERBOSE_NAME": "com.trembita.iacservice"
# }
# FCM_APIKEY = 'AAAAHctVUoI:APA91bEVgah9TEY97NZz0kD5I8JVZ88zcUSBy32bb3PUhkWOj7wmEd1XTHJbFvweYBIQR4kqRFjRYZHCRARTP08XPR4m9Adr_rcmyMEvO7g9DQ7NOon-Q1AVvCnocYbmLEU3XuvEyJk0'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        # 'sync_client.authentication.SyncClientAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
}

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    'Access-Control-Allow-Origin',
    'Access-Control-Allow-Headers',
    'Access-Control-Allow-Credentials',
]

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOWED_ORIGINS = [
    "http://10.0.43.141:1025",
    "http://10.0.43.141:1024",

    "http://localhost:8080",
    "http://127.0.0.1:8080",
]

CSRF_TRUSTED_ORIGINS = [
    "http://10.0.43.141:1025",
    "http://10.0.43.141:1024",

    "http://localhost:8080",
    "http://127.0.0.1:8080",
]

MIDDLEWARE = [
    # 'ministry_info_system.middlewares.HealthCheckMiddleware',
    # 'corsheaders.middleware.CorsPostCsrfMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'admin_reorder.middleware.ModelAdminReorder',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'silk.middleware.SilkyMiddleware',
]

ROOT_URLCONF = 'ministry_info_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],  # <- add this line os.path.join(BASE_DIR, 'ministry_info_system/templates')
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

TEMPLATE_DIRS = [
    os.path.join(BASE_DIR, 'templates')
]

TEMPLATE_LOADERS = [
    'django.template.loaders.filesystem.Loader'   
]

CELERY_TIMEZONE = 'Europe/Kiev'
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60

CELERY_RESULT_BACKEND = 'django-db'

SELECT2_CACHE_BACKEND = "select2"
CELERY_CACHE_BACKEND = 'default'

# 0, 1 celery
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": [ 
            file_env('REDIS_DEFAULT_URL'), 
            file_env('REDIS_DEFAULT_URL_REPLICA'), 
        ],
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            'MASTER_CACHE': file_env('REDIS_DEFAULT_URL'),
        }
    },
    "select2": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": [ 
            file_env('REDIS_SELECT2_URL'), 
            file_env('REDIS_SELECT2_URL_REPLICA'),
        ],
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            'MASTER_CACHE': file_env('REDIS_SELECT2_URL'),
        }
    }
}

# print(file_env('REDIS_SELECT2_URL_MASTER'))
# print(file_env('REDIS_SELECT2_URL_REPLICA'))
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": file_env('REDIS_DEFAULT_URL'),
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis_sentinel.SentinelClient",
#         }
#     },
#     "select2": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": file_env('REDIS_SELECT2_URL'),
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis_sentinel.SentinelClient",
#         }
#     }
# }

# CACHES = {
#         "default": {
#             "BACKEND": "django_redis.cache.RedisCache",
#             "LOCATION": "redis_master/sentinel-host1:2639,sentinel-host2:2639/0"
#             "OPTIONS": {
#                 "PASSWORD": 's3cret_passw0rd!',
#                 "CLIENT_CLASS": "django_redis_sentinel.SentinelClient",
#             }
#         }
#     }

REDIS_CELERY_BROKER_URL = file_env('REDIS_CELERY_BROKER_URL')
REDIS_CELERY_BACKEND_URL = file_env('REDIS_CELERY_BACKEND_URL')

WSGI_APPLICATION = 'ministry_info_system.wsgi.application'

DATABASES = {
    # 'default': file_env.db('DEFAULT_DATABASE_URL')
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': file_env('DEFAULT_DATABASE_NAME'),
        'HOST': file_env('DEFAULT_DATABASE_URL'),
        'PORT': file_env('DEFAULT_DATABASE_PORT'),
        'USER': file_env('DEFAULT_DATABASE_USERNAME'),
        'PASSWORD': file_env('DEFAULT_DATABASE_PASSWORD')
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'uk'

TIME_ZONE = 'Europe/Kiev'

USE_I18N = True
USE_L10N = True

USE_TZ = True

X_FRAME_OPTIONS = 'ALLOWALL'
XS_SHARING_ALLOWED_METHODS = ['GET']

MEDIA_URL = file_env.str('MEDIA_URL', default='media/')
MEDIA_ROOT = os.path.join(file_env.str('BASE_MEDIA_DIR', default=BASE_DIR),
                          MEDIA_URL)

STATIC_URL = file_env.str('STATIC_URL', default='static/')
STATIC_ROOT = os.path.join(file_env.str('BASE_STATIC_DIR', default=BASE_DIR),
                           STATIC_URL)

